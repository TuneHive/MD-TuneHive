// Generated by view binder compiler. Do not edit!
package com.example.tunehive.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tunehive.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPostCommunityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView commentButton;

  @NonNull
  public final ImageView likeButton;

  @NonNull
  public final TextView likeCount;

  @NonNull
  public final TextView postText;

  @NonNull
  public final TextView postTimestamp;

  @NonNull
  public final ImageView profilePicture;

  @NonNull
  public final ImageView shareButton;

  @NonNull
  public final TextView userName;

  private ItemPostCommunityBinding(@NonNull LinearLayout rootView, @NonNull ImageView commentButton,
      @NonNull ImageView likeButton, @NonNull TextView likeCount, @NonNull TextView postText,
      @NonNull TextView postTimestamp, @NonNull ImageView profilePicture,
      @NonNull ImageView shareButton, @NonNull TextView userName) {
    this.rootView = rootView;
    this.commentButton = commentButton;
    this.likeButton = likeButton;
    this.likeCount = likeCount;
    this.postText = postText;
    this.postTimestamp = postTimestamp;
    this.profilePicture = profilePicture;
    this.shareButton = shareButton;
    this.userName = userName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPostCommunityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPostCommunityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_post_community, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPostCommunityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment_button;
      ImageView commentButton = ViewBindings.findChildViewById(rootView, id);
      if (commentButton == null) {
        break missingId;
      }

      id = R.id.like_button;
      ImageView likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.likeCount;
      TextView likeCount = ViewBindings.findChildViewById(rootView, id);
      if (likeCount == null) {
        break missingId;
      }

      id = R.id.postText;
      TextView postText = ViewBindings.findChildViewById(rootView, id);
      if (postText == null) {
        break missingId;
      }

      id = R.id.postTimestamp;
      TextView postTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (postTimestamp == null) {
        break missingId;
      }

      id = R.id.profilePicture;
      ImageView profilePicture = ViewBindings.findChildViewById(rootView, id);
      if (profilePicture == null) {
        break missingId;
      }

      id = R.id.share_button;
      ImageView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ItemPostCommunityBinding((LinearLayout) rootView, commentButton, likeButton,
          likeCount, postText, postTimestamp, profilePicture, shareButton, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
